#Each commit message has a header, body, and footer.
# The header has a type, scope, and subject.
# The header is mandatory, the scope is optional.
# example) fix: remove unused dependency lodash.camelcase
#
#Type:(feat, fix, docs, style, refactor,perf, test, chore)
#  feat: A new feature.
#  fix: A bug fix.
#  docs: Documentation only changes.
#  style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc).
#  refactor: A code change that neither fixes a bug nor adds a feature.
#  perf: A code change that improves performance.
#  test: Adding missing tests.
#  chore: Changes to the build process or auxiliary tools and libraries such as documentation generation.
#
#Scope The scope is optional and could be anything specifying place of the commit change. 
#For example nsis, mac, linux, etc...
#
#Body:
# Just as in the subject, use the imperative, present tense: "change" not "changed" nor "changes". 
# The body should include the motivation for the change and contrast this with previous behavior.

#Footer
# The footer should contain any information about Breaking Changes and is 
# also the place to reference GitHub issues that this commit Closes.
# Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.
# The rest of the commit message is then used for this.


